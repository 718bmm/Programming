"""
1. Какие типы view можно создавать в Django?
2. Опишите что такое декоратор c примером
3. Для чего ипользуется WHERE в SQL
4. Создать одностраничный сайт для создания списка дел (To Do app). Должен состоят из:
    a) формы для создания дела c полями и сохранить в БД
        название
        описание
        статус (to do, in progress, done)
        время исполнения (дедлайн)
    b) после создания должен сразу отображаться на этом же сайте
    c) для выполнения задания нужно будет создать модель c теми полями как и в форме
"""




# Answers

""" 1. Какие типы view-функций можно создавать в Django? """

# 1. Функциональные представления (Function-based views):

    # - Определены как обычные функции.
    # - Принимают объект запроса (request) в качестве аргумента и возвращают объект ответа (response).
    # - Можно использовать для простых операций, таких как отображение шаблонов или выполнение логики обработки данных.

# 2. Представления на основе классов (Class-based views):

    # - Определены в виде классов, наследующихся от предопределенных базовых классов в Django.
    # - Предоставляют более структурированный и модульный подход к определению представлений.
    # - Различные методы класса, такие как get(), post(), put(), delete(), определяют действия, выполняемые для разных типов запросов.

# 3. Представления на основе обобщенных классов (Generic class-based views):

    # - Представляют предопределенные классы представлений, предоставляемые Django.
    # - Упрощают создание представлений с общими функциями, такими как отображение списка объектов модели, отображение деталей объекта и т.д.
    # - Например, ListView, DetailView, CreateView, UpdateView, DeleteView и т.д.

# 4. API-представления (API views):

    # - Представления, специально предназначенные для разработки веб-сервисов (API).
    # - Используются совместно с фреймворками, такими как Django REST framework, для создания RESTful API.
    # - Могут поддерживать разные форматы ответов, такие как JSON, XML и т.д.

# 5. Представления на основе моделей (Model-based views):

    # - Представления, связанные с определенной моделью в базе данных.
    # - Предоставляют стандартные операции CRUD (Create, Read, Update, Delete) для работы с моделью.
    # - Например, CreateView, ListView, DetailView, UpdateView, DeleteView.




""" 2. Опишите что такое декоратор c примером """

# Декоратор в Python - это функция, которая принимает другую функцию в качестве аргумента и расширяет её функциональность, 
# не изменяя исходный код этой функции. Декораторы позволяют добавлять дополнительное поведение к функции, 
# такое как логирование, аутентификацию, кэширование и т.д.

# Пример декоратора:
def logger(func):
    def wrapper(*args, **kwargs):
        return func(*args, **kwargs)
    return wrapper

@logger
def add(a, b):
    return a + b

result = add(2, 3)
print(result)

# В приведенном примере декоратор logger принимает функцию func в качестве аргумента, затем определяет внутреннюю функцию wrapper, 
# которая добавляет дополнительное поведение (в данном случае, выводит сообщение о вызове функции). 
# Затем оригинальная функция func вызывается с переданными аргументами и возвращаемое значение возвращается из wrapper.
# С помощью @logger перед определением функции add, мы применяем декоратор к функции add. При вызове add(2, 3), в консоли будет выведено сообщение "Вызвана функция: add", а затем будет возвращена сумма 2 и 3, равная 5.
# Таким образом, декоратор logger позволяет добавить логирование вызовов функции add без изменения исходного кода самой функции.




""" 3. Для чего ипользуется WHERE в SQL """

# WHERE в SQL используется для фильтрации данных в запросах к базе данных. 
# Этот оператор позволяет выбирать строки из таблицы, которые соответствуют определенному условию.
# Примеры использования WHERE:

# Выборка строк, где определенный столбец равен определенному значению:
    # SELECT * FROM таблица WHERE столбец = значение;

# Выборка строк, где определенный столбец не равен определенному значению:
    # SELECT * FROM таблица WHERE столбец <> значение;

# Выборка строк, где определенный столбец больше или меньше определенного значения:
    # SELECT * FROM таблица WHERE столбец > значение;
    # SELECT * FROM таблица WHERE столбец < значение;




""" 
4. Создать одностраничный сайт для создания списка дел (To Do app). Должен состоят из: 
        a) формы для создания дела c полями и сохранить в БД
            название
            описание
            статус (to do, in progress, done)
            время исполнения (дедлайн)
        b) после создания должен сразу отображаться на этом же сайте
        c) для выполнения задания нужно будет создать модель c теми полями как и в форме
"""

